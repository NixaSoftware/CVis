// Class automatically generated by Dev-C++ New Class wizard

#ifndef COMBINER_H
#define COMBINER_H

#include <iostream>
#include <stdlib.h>
#include <vector>
#include <iterator>

#include "TPartitionSolution.h"
#include "tPartition.h"
#include "MO/nsgaii.h"
//#include "MO/spea.h"

// para incluir as bibliotecas Boost
/*#include <boost/filesystem/operations.hpp> // includes boost/filesystem/path.hpp
#include <boost/filesystem/fstream.hpp>    // ditto
#include <boost/filesystem/convenience.hpp>    // ditto
#include <boost/lexical_cast.hpp>
*/
#include <boost/filesystem.hpp>
#include <boost/filesystem/fstream.hpp>
#include <boost/lexical_cast.hpp>
#include <boost/tokenizer.hpp>

namespace fs = boost::filesystem;

/*
 * No description
 */
class combiner
{
	private:            
//        tPatterns patterns;
		tPartition *truePartition;
		fs::path dataset; 
		
	public:
		// class constructor
		combiner(fs::path &ds, fs::path &expDir, fs::path &dirInitialPop, tPartition *tp);
		// class destructor
		~combiner();				
		
        fs::path experimentsDir; 
        fs::path dirInitialPopulation;
		fs::path dirSolutionPopulation;
		fs::path resultFile;
		
		TNSGAII<TPartitionSolution> partitionSolution;
//		TSPEA<TPartitionSolution> partitionSolution;
		
		void runCombiner(int nGenerations, double mutationProbability);//, int nNearestNeighbors);
		
};

#endif // COMBINER_H


