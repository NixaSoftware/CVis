// Class automatically generated by Dev-C++ New Class wizard

#ifndef SOTA_H
#define SOTA_H

#include <string>
#include <vector>
#include "cpartition.h"
#include "clusteringTypes.h"
#include "boost/tokenizer.hpp"
#include "boost/lexical_cast.hpp"

#include <iostream>



// object function that run the SOTA algorithm
class sota
{
	public:
        typedef std::map<int, std::vector<double> > t_cells;
        // class constructor
		sota(std::string datasetName, std::string fileResultName, t_similarities sim,
           float variability, float resource, float error, int nCycle, 
           float act1, float act2, float act3);
		sota(std::string datasetName, std::string fileResultName, t_similarities sim);
        sota();
		sota(std::string datasetName, std::string fileResultName, t_similarities sim, std::string parameters);
        sota(std::string parameters);
		// class destructor
		//~sota();
		sota(const sota &a);
		sota & operator = (const sota &a);
		
		//partition operator() ();
		cpartition run();
		void changeDataset(std::string datasetName);
		void changeResultFile(std::string fileResultName);
		void changeSimilarity(t_similarities sim);
        void changeVT(float VT); // variability threshold (0)
        void changeRT(float RT); // resource threshold (0)
        void changeET(float ET); // relative error threshold (0.0001)
        void changeA1(float A1);
        void changeA2(float A2);
        void changeA3(float A3); // actualization factors: winning node, mother node, 
                        // sister node (0, 0, 0)
        void changeCN(int CN); // maximum number of clycles
		cpartition getPartition();
		t_cells getCells();

	private:
        std::string dataset;
        std::string fileResult;
        t_similarities similarity; // "euclidean", "correlation", "square"
                                // "offset", "spearman", "jackknife"
        float VT, // variability threshold (0)
            RT, // resource threshold (0)
            ET, // relative error threshold (0.0001)
            A1, A2, A3; // actualization factors: winning node, mother node, 
                        // sister node (0, 0, 0)
            int CN; // maximum number of clycles
        cpartition p;
                
        static const float VTDefault = 0; // variability threshold
        static const float RTDefault = 0; // resource threshold
        static const float ETDefault = 0.0001; // relative error threshold
        static const int CNDefault = 0; // maximum number of clycles
        static const float A1Default = 0;
        static const float A2Default = 0;
        static const float A3Default = 0;  
};

#endif // SOTA_H

